class Solution {
    public int trap(int[] height) {
        if(height.length<3) return 0;
        Stack<Integer> trap = new Stack();
        trap.push(0);
        int res = 0;
        for(int i = 0; i<height.length;i++){
            
            while(!trap.isEmpty() && (height[trap.peek()]<height[i])){
                int poped = trap.pop();
                if(trap.isEmpty()) break;
                int dist = i - trap.peek()-1;
                int min = Math.min(height[trap.peek()],height[i]);
                res += (min-height[poped])*dist;
            }
            trap.push(i);
        }
        return res;
    }
}
