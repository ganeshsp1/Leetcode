/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode() {}
 *     TreeNode(int val) { this.val = val; }
 *     TreeNode(int val, TreeNode left, TreeNode right) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */
class Solution {
    int max = 0;
    int sum = 0;
    public int deepestLeavesSum(TreeNode root) {
        return deepestLeavesSum(root,0);
    }
    
    public int deepestLeavesSum(TreeNode root, int count) {
        if(root==null){
            return sum;
        }
            ++count;
        if(root.left==null && root.right==null){
            if(count==max){
                sum = sum+root.val;
            }else if(count>max){
                max = count;
                sum = root.val;
            }
        }else{
        deepestLeavesSum(root.left,count);
        deepestLeavesSum(root.right,count);
        }
        return sum;        
    }
}
